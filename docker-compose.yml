volumes:  
  mysqldata:

networks:
  Data-Back:
    driver: bridge
  Front-Back:
    driver: bridge
  

services:
  db:
    image: docker.io/library/mysql:8.4
    container_name: demo_mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_0900_ai_ci
    environment:
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: pword
      MYSQL_ROOT_PASSWORD: pwordR

    volumes:
      - mysqldata:/var/lib/mysql
    # Descomenta si necesitas acceso externo a MySQL
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=pword || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - Data-Back

  app:
    build:
      context: ./Backend/sysmarket
      dockerfile: Dockerfile
    container_name: demo_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://demo_mysql:3306/appdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      db_username: appuser
      db_password: pword
    ports:
      - "8080:8080"
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    # Distroless ya corre como non-root (uid 65532). Si usas otra imagen, a√±ade USER no-root.
    networks:
      - Data-Back

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_AUTH_API_URL= http://app:8080/api/v1/user
        - NEXT_PUBLIC_PRODUCT_API_URL= http://app:8080/api/v1/products
        - NEXT_PUBLIC_PROVIDER_API_URL= http://app:8080/api/v1/proveedor
    
    container_name: demo_frontend
    depends_on:
      - app
    ports:
      - "3000:3000"
    security_opt:
      - no-new-privileges:true
    networks:
      - Front-Back