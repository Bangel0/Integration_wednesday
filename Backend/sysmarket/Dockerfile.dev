# ============ STAGE 1: BUILDER ============
FROM maven:3.9.9-eclipse-temurin-21-alpine AS builder

WORKDIR /app

# 1) Copiamos sólo el POM para cachear dependencias
COPY pom.xml ./

# Calentar dependencias (cache Maven)
RUN --mount=type=cache,target=/root/.m2 \
    mvn -B -q -DskipTests dependency:go-offline

# 2) Copiamos el código fuente
COPY src ./src

# 3) Compilamos el JAR (Spring Boot reempacado)
RUN --mount=type=cache,target=/root/.m2 \
    mvn -B -DskipTests clean package

# Determinamos el jar final (evitar original- y -plain)
# Guardamos el nombre y copiamos a /tmp/app.jar para pasar al runner
RUN JAR="$(ls -1 target/*.jar | grep -v -E '/original-.*\.jar$|\-plain\.jar$' | head -n1)" \
    && echo "Selected JAR: $JAR" \
    && cp "$JAR" /tmp/app.jar


# ============ STAGE 2: RUNNER ============
# Opción recomendada: JRE Temurin 21 sobre Alpine (ligero y listo para producción)
FROM eclipse-temurin:21-jre-alpine AS runner

# Usuario no root por seguridad
# (puedes ajustar UID/GID si tu entorno lo requiere)
RUN addgroup -S app && adduser -S app -G app

WORKDIR /opt/app

# Copiamos sólo el artefacto construido
COPY --from=builder /tmp/app.jar opt/app/app.jar

# Puerto de la app
EXPOSE 8080

# Ajustes JVM
ENV JAVA_TOOL_OPTIONS="-XX:MaxRAMPercentage=75 -XX:+ExitOnOutOfMemoryError -Djava.security.egd=file:/dev/urandom"

# Salud opcional (si tienes actuator /health)
# HEALTHCHECK --interval=30s --timeout=3s --start-period=20s --retries=3 \
#   CMD wget -qO- http://localhost:8080/actuator/health | grep '"status":"UP"' || exit 1

# Cambiamos a usuario no root
USER app

# Ejecutamos
ENTRYPOINT ["java","-jar","opt/app/app.jar"]